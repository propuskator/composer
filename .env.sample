# general
ROOT_DIR=.
TIMEZONE=Europe/Kiev
DEEP_LINK_HOST_URL=http://localhost/app

# proxy
NGINX_HTTP_PORT=80

# mysql
MYSQL_USER=access_user
MYSQL_PASSWORD=passw0rd
MYSQL_ROOT_PASSWORD=rootpassw0rd
MYSQL_DATABASE=access
MYSQL_HOST=access-percona

# ui
DNS=localhost
API_URL=https://localhost
API_PREFIX=/api/v1/admin/

# backend
BACKEND_HOST=access-backend
PORT=8000

ACCESS_TOKEN_SECRET=SUPER_SECRET
ADMIN_PASSWORD_RESET_TOKEN_SECRET=SUPER_SECRET
MOBILE_PASSWORD_RESET_TOKEN_SECRET=SUPER_SECRET

DB_HOST=access-percona
DB_PORT=3306
DB_DIALECT=mysql

TOKEN_READER_ACTIVE_PERIOD_SECONDS=900
ACCESS_TOKEN_LIFETIME=1200
# accepts value in seconds
RESET_PASSWORD_INTERVAL=300

ROOT_SSL_CERT_PATH=/app/etc/ssl/certs/ca.pem

MQTT_URI=mqtt://access-emqx:1883
MQTT_ROOT_USERNAME=microcloud
MQTT_ROOT_PASSWORD=1234567890

# backups configuration
BACKUPS_DIR_PATH=/backups
BACKUPS_LIFE_DAYS=30
ENCRYPT_KEYS_FOLDER=/node-script/keys/
# paste here email that is related with PGP public key
ENCRYPT_KEYS_EMAIL=test@test.com

MAIL_OPTIONS_TRANSPORT_OPTIONS_PORT=
MAIL_OPTIONS_TRANSPORT_OPTIONS_HOST=
MAIL_OPTIONS_TRANSPORT_OPTIONS_AUTH_USER=
MAIL_OPTIONS_TRANSPORT_OPTIONS_AUTH_PASS=

MAIL_OPTIONS_FROM=

REPORT_RECIEVER_EMAIL=receiver@mail.com
REPORT_SEND_INTERVAL=300000
COLLECT_FRAMES_INTERVAL=60000
# number of concurrent processes that collect frames
# reduce this value if there are issues with performance while collecting frames
COLLECT_FRAMES_CONCURRENT_PROCS_NUMBER=5
# timeout in ms for the process that collect frame
COLLECT_FRAMES_PROC_TIMEOUT=60000

READER_PHONE_NUMBERS=+77777777777777
# Telegram Bot
TELEGRAM_BOT_TOKEN=1111111111:AAAAAAAAAA
# available values: "polling", "webhook"
TELEGRAM_BOT_UPDATE_MODE=webhook

# Cameras media collector service
# interval to collect frames from camera's stream in seconds
CAMERAS_MEDIA_COLLECT_FRAMES_INTERVAL_TIME=60
# accuracy time of collecting frame, in seconds
CAMERAS_MEDIA_COLLECT_FRAMES_ACCURACY_TIME=5
# duration of a video segments to collect from camera's stream
CAMERAS_MEDIA_VIDEO_SEGMENT_TIME=30
# duration of a time to wait before restart exited process(collect frames/collect videos) in seconds
CAMERAS_MEDIA_RESTART_PROCESSES_TIMEOUT=30
# whether to collect media only for cameras with assigned token reader
# Possible values: 'true' and any other value for false.
CAMERAS_MEDIA_COLLECT_FOR_CAMERAS_WITH_ASSIGNED_TOKEN_READER=true
# interval of checking changes of rtspUrl attribute of accesscameras records
CHECK_RTSP_URL_CHANGES_INTERVAL_TIME=15
# number of days for cameras media files lifetime
CAMERAS_MEDIA_FILES_LIFE_DAYS=1

# Minio service
MINIO_HOST=access-minio
MINIO_PORT=9000
MINIO_BUCKET=access-bucket
MINIO_ROOT_USER=SUPER_SECRET
MINIO_ROOT_PASSWORD=SUPER_SECRET

# Access logs
# number of frames that are related to access log to save to S3 bucket
LOGS_RECORDED_FRAMES_TO_SAVE_NUMBER=3
# number of videos that are related to access log to save to S3 bucket
LOGS_RECORDED_VIDEOS_TO_SAVE_NUMBER=2

# Modbus Bridge
SERVICES_TOKEN_LIFETIME=1200
MODBUS_SERVICE_TOKEN=SUPER_SECRET

# heartbeat
# mode in which to launch heartbeat, possible values: "optimized", "old_homie"
HEARTBEAT_MODE=optimized
# time to recieve topics from broker
HEARTBEAT_INIT_TIME=30000

# MQTT proxy
# maximum number of supported additional relays
MAX_ADDITIONAL_RELAYS_NUMBER=50

# QR codes
# For details see: https://github.com/soldair/node-qrcode#error-correction-level
QR_CODES_ERROR_CORRECTION_LEVEL=quartile

# The number of registration requests limit per minute
USER_REQUESTS_REGISTRATION_ATTEMPTS_COUNT=25
